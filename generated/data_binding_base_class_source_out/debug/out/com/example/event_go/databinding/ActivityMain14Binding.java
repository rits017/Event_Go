// Generated by view binder compiler. Do not edit!
package com.example.event_go.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.event_go.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMain14Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button b141;

  @NonNull
  public final TextView tv141;

  @NonNull
  public final TextView tv142;

  @NonNull
  public final TextView tv143;

  @NonNull
  public final TextView tv144;

  @NonNull
  public final TextView tv145;

  @NonNull
  public final TextView tv146;

  @NonNull
  public final TextView tv147;

  private ActivityMain14Binding(@NonNull ConstraintLayout rootView, @NonNull Button b141,
      @NonNull TextView tv141, @NonNull TextView tv142, @NonNull TextView tv143,
      @NonNull TextView tv144, @NonNull TextView tv145, @NonNull TextView tv146,
      @NonNull TextView tv147) {
    this.rootView = rootView;
    this.b141 = b141;
    this.tv141 = tv141;
    this.tv142 = tv142;
    this.tv143 = tv143;
    this.tv144 = tv144;
    this.tv145 = tv145;
    this.tv146 = tv146;
    this.tv147 = tv147;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain14Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain14Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main14, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain14Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b141;
      Button b141 = ViewBindings.findChildViewById(rootView, id);
      if (b141 == null) {
        break missingId;
      }

      id = R.id.tv141;
      TextView tv141 = ViewBindings.findChildViewById(rootView, id);
      if (tv141 == null) {
        break missingId;
      }

      id = R.id.tv142;
      TextView tv142 = ViewBindings.findChildViewById(rootView, id);
      if (tv142 == null) {
        break missingId;
      }

      id = R.id.tv143;
      TextView tv143 = ViewBindings.findChildViewById(rootView, id);
      if (tv143 == null) {
        break missingId;
      }

      id = R.id.tv144;
      TextView tv144 = ViewBindings.findChildViewById(rootView, id);
      if (tv144 == null) {
        break missingId;
      }

      id = R.id.tv145;
      TextView tv145 = ViewBindings.findChildViewById(rootView, id);
      if (tv145 == null) {
        break missingId;
      }

      id = R.id.tv146;
      TextView tv146 = ViewBindings.findChildViewById(rootView, id);
      if (tv146 == null) {
        break missingId;
      }

      id = R.id.tv147;
      TextView tv147 = ViewBindings.findChildViewById(rootView, id);
      if (tv147 == null) {
        break missingId;
      }

      return new ActivityMain14Binding((ConstraintLayout) rootView, b141, tv141, tv142, tv143,
          tv144, tv145, tv146, tv147);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
