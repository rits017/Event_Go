// Generated by view binder compiler. Do not edit!
package com.example.event_go.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.event_go.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMain20Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button b201;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final TextView tv202;

  @NonNull
  public final TextView tv203;

  @NonNull
  public final TextView tv204;

  @NonNull
  public final TextView tv205;

  @NonNull
  public final TextView tv206;

  @NonNull
  public final TextView tv207;

  @NonNull
  public final TextView tv241;

  private ActivityMain20Binding(@NonNull ConstraintLayout rootView, @NonNull Button b201,
      @NonNull ImageView imageView2, @NonNull TextView tv202, @NonNull TextView tv203,
      @NonNull TextView tv204, @NonNull TextView tv205, @NonNull TextView tv206,
      @NonNull TextView tv207, @NonNull TextView tv241) {
    this.rootView = rootView;
    this.b201 = b201;
    this.imageView2 = imageView2;
    this.tv202 = tv202;
    this.tv203 = tv203;
    this.tv204 = tv204;
    this.tv205 = tv205;
    this.tv206 = tv206;
    this.tv207 = tv207;
    this.tv241 = tv241;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain20Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain20Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main20, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain20Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b201;
      Button b201 = ViewBindings.findChildViewById(rootView, id);
      if (b201 == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.tv202;
      TextView tv202 = ViewBindings.findChildViewById(rootView, id);
      if (tv202 == null) {
        break missingId;
      }

      id = R.id.tv203;
      TextView tv203 = ViewBindings.findChildViewById(rootView, id);
      if (tv203 == null) {
        break missingId;
      }

      id = R.id.tv204;
      TextView tv204 = ViewBindings.findChildViewById(rootView, id);
      if (tv204 == null) {
        break missingId;
      }

      id = R.id.tv205;
      TextView tv205 = ViewBindings.findChildViewById(rootView, id);
      if (tv205 == null) {
        break missingId;
      }

      id = R.id.tv206;
      TextView tv206 = ViewBindings.findChildViewById(rootView, id);
      if (tv206 == null) {
        break missingId;
      }

      id = R.id.tv207;
      TextView tv207 = ViewBindings.findChildViewById(rootView, id);
      if (tv207 == null) {
        break missingId;
      }

      id = R.id.tv241;
      TextView tv241 = ViewBindings.findChildViewById(rootView, id);
      if (tv241 == null) {
        break missingId;
      }

      return new ActivityMain20Binding((ConstraintLayout) rootView, b201, imageView2, tv202, tv203,
          tv204, tv205, tv206, tv207, tv241);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
