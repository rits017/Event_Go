// Generated by view binder compiler. Do not edit!
package com.example.event_go.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.event_go.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMain6Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button b61;

  @NonNull
  public final EditText ed61;

  @NonNull
  public final EditText ed62;

  @NonNull
  public final EditText ed63;

  @NonNull
  public final ImageView iv61;

  @NonNull
  public final TextView t61;

  private ActivityMain6Binding(@NonNull ConstraintLayout rootView, @NonNull Button b61,
      @NonNull EditText ed61, @NonNull EditText ed62, @NonNull EditText ed63,
      @NonNull ImageView iv61, @NonNull TextView t61) {
    this.rootView = rootView;
    this.b61 = b61;
    this.ed61 = ed61;
    this.ed62 = ed62;
    this.ed63 = ed63;
    this.iv61 = iv61;
    this.t61 = t61;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain6Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain6Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main6, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain6Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b61;
      Button b61 = ViewBindings.findChildViewById(rootView, id);
      if (b61 == null) {
        break missingId;
      }

      id = R.id.ed61;
      EditText ed61 = ViewBindings.findChildViewById(rootView, id);
      if (ed61 == null) {
        break missingId;
      }

      id = R.id.ed62;
      EditText ed62 = ViewBindings.findChildViewById(rootView, id);
      if (ed62 == null) {
        break missingId;
      }

      id = R.id.ed63;
      EditText ed63 = ViewBindings.findChildViewById(rootView, id);
      if (ed63 == null) {
        break missingId;
      }

      id = R.id.iv61;
      ImageView iv61 = ViewBindings.findChildViewById(rootView, id);
      if (iv61 == null) {
        break missingId;
      }

      id = R.id.t61;
      TextView t61 = ViewBindings.findChildViewById(rootView, id);
      if (t61 == null) {
        break missingId;
      }

      return new ActivityMain6Binding((ConstraintLayout) rootView, b61, ed61, ed62, ed63, iv61,
          t61);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
